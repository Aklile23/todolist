{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vision\\\\To Do list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoItems = [\"Align Racks A18 and A45 with other racks and place steel beam inside\", \"Fix Orange Racking Beams shape to rectangular\", \"Change Battery Charging Area wall color to Light Grey\", \"Change Battery Charging Area Door Color to White\", \"Add Rack Labelling (M01, M02, M03) to both ends of Mezzanine\", \"Insert orange beam levels in Mezzanine\", \"Re-add walking floors in Mezzanine\", \"Change warehouse external doors to Fire Doors (red color)\", \"Add 'Fire Exit' labels above each Fire Door inside warehouse\", \"Double height of safety side barrier on outdoor ramps\", \"Add 'SECURITY' signage with Indu logo to security building\", \"Add extra barrier system to Security\", \"Make External Dock Doors blue\", \"Add Men/Women symbols to Toilet Doors\", \"Modernize Reception area per style guide\", \"Update Office Styling with modern features\", \"Apply Indu Logos in office areas\", \"Modernize Office Toilets and Pantry\"];\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState(() => {\n    // Get saved todos from localStorage or use default list\n    const saved = localStorage.getItem('todos');\n    if (saved) {\n      return JSON.parse(saved);\n    }\n    // Initialize todos with completed: false\n    return todoItems.map(item => ({\n      text: item,\n      completed: false\n    }));\n  });\n\n  // Save todos to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const handleToggle = index => {\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Warehouse Updates Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: () => handleToggle(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: todo.completed ? 'completed' : '',\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wFAcSVq9hRXsea83kMbP7nK1kKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","todoItems","App","_s","todos","setTodos","saved","localStorage","getItem","JSON","parse","map","item","text","completed","setItem","stringify","handleToggle","index","newTodos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","todo","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Vision/To Do list/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst todoItems = [\r\n  \"Align Racks A18 and A45 with other racks and place steel beam inside\",\r\n  \"Fix Orange Racking Beams shape to rectangular\",\r\n  \"Change Battery Charging Area wall color to Light Grey\",\r\n  \"Change Battery Charging Area Door Color to White\",\r\n  \"Add Rack Labelling (M01, M02, M03) to both ends of Mezzanine\",\r\n  \"Insert orange beam levels in Mezzanine\",\r\n  \"Re-add walking floors in Mezzanine\",\r\n  \"Change warehouse external doors to Fire Doors (red color)\",\r\n  \"Add 'Fire Exit' labels above each Fire Door inside warehouse\",\r\n  \"Double height of safety side barrier on outdoor ramps\",\r\n  \"Add 'SECURITY' signage with Indu logo to security building\",\r\n  \"Add extra barrier system to Security\",\r\n  \"Make External Dock Doors blue\",\r\n  \"Add Men/Women symbols to Toilet Doors\",\r\n  \"Modernize Reception area per style guide\",\r\n  \"Update Office Styling with modern features\",\r\n  \"Apply Indu Logos in office areas\",\r\n  \"Modernize Office Toilets and Pantry\"\r\n];\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState(() => {\r\n    // Get saved todos from localStorage or use default list\r\n    const saved = localStorage.getItem('todos');\r\n    if (saved) {\r\n      return JSON.parse(saved);\r\n    }\r\n    // Initialize todos with completed: false\r\n    return todoItems.map(item => ({\r\n      text: item,\r\n      completed: false\r\n    }));\r\n  });\r\n\r\n  // Save todos to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const handleToggle = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos[index].completed = !newTodos[index].completed;\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Warehouse Updates Checklist</h1>\r\n      <div className=\"todo-list\">\r\n        {todos.map((todo, index) => (\r\n          <div key={index} className=\"todo-item\">\r\n            <label className=\"checkbox-container\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => handleToggle(index)}\r\n              />\r\n              <span className=\"checkmark\"></span>\r\n              <span className={todo.completed ? 'completed' : ''}>\r\n                {todo.text}\r\n              </span>\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}